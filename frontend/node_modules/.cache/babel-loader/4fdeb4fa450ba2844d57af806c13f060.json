{"ast":null,"code":"'use strict';\n\nconst SchemaTypeOptions = require('./SchemaTypeOptions');\n/**\n * The options defined on a single nested schematype.\n *\n * ####Example:\n *\n *     const schema = Schema({ child: Schema({ name: String }) });\n *     schema.path('child').options; // SchemaSingleNestedOptions instance\n *\n * @api public\n * @inherits SchemaTypeOptions\n * @constructor SchemaSingleNestedOptions\n */\n\n\nclass SchemaSingleNestedOptions extends SchemaTypeOptions {}\n\nconst opts = require('./propertyOptions');\n/**\n * If set, overwrites the child schema's `_id` option.\n *\n * ####Example:\n *\n *     const childSchema = Schema({ name: String });\n *     const parentSchema = Schema({\n *       child: { type: childSchema, _id: false }\n *     });\n *     parentSchema.path('child').schema.options._id; // false\n *\n * @api public\n * @property of\n * @memberOf SchemaSingleNestedOptions\n * @type Function|string\n * @instance\n */\n\n\nObject.defineProperty(SchemaSingleNestedOptions.prototype, '_id', opts);\nmodule.exports = SchemaSingleNestedOptions;","map":{"version":3,"sources":["C:/Users/Thakshan/Desktop/BookCorner/node_modules/mongoose/lib/options/SchemaSingleNestedOptions.js"],"names":["SchemaTypeOptions","require","SchemaSingleNestedOptions","opts","Object","defineProperty","prototype","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,iBAAiB,GAAGC,OAAO,CAAC,qBAAD,CAAjC;AAEA;;;;;;;;;;;;;;AAaA,MAAMC,yBAAN,SAAwCF,iBAAxC,CAA0D;;AAE1D,MAAMG,IAAI,GAAGF,OAAO,CAAC,mBAAD,CAApB;AAEA;;;;;;;;;;;;;;;;;;;AAkBAG,MAAM,CAACC,cAAP,CAAsBH,yBAAyB,CAACI,SAAhD,EAA2D,KAA3D,EAAkEH,IAAlE;AAEAI,MAAM,CAACC,OAAP,GAAiBN,yBAAjB","sourcesContent":["'use strict';\n\nconst SchemaTypeOptions = require('./SchemaTypeOptions');\n\n/**\n * The options defined on a single nested schematype.\n *\n * ####Example:\n *\n *     const schema = Schema({ child: Schema({ name: String }) });\n *     schema.path('child').options; // SchemaSingleNestedOptions instance\n *\n * @api public\n * @inherits SchemaTypeOptions\n * @constructor SchemaSingleNestedOptions\n */\n\nclass SchemaSingleNestedOptions extends SchemaTypeOptions {}\n\nconst opts = require('./propertyOptions');\n\n/**\n * If set, overwrites the child schema's `_id` option.\n *\n * ####Example:\n *\n *     const childSchema = Schema({ name: String });\n *     const parentSchema = Schema({\n *       child: { type: childSchema, _id: false }\n *     });\n *     parentSchema.path('child').schema.options._id; // false\n *\n * @api public\n * @property of\n * @memberOf SchemaSingleNestedOptions\n * @type Function|string\n * @instance\n */\n\nObject.defineProperty(SchemaSingleNestedOptions.prototype, '_id', opts);\n\nmodule.exports = SchemaSingleNestedOptions;"]},"metadata":{},"sourceType":"script"}