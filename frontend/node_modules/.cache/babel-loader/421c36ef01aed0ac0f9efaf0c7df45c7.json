{"ast":null,"code":"import axios from 'axios';\nimport { FEEDBACK_CREATE_REQUEST, FEEDBACK_CREATE_SUCCESS, FEEDBACK_CREATE_FAIL, FEEDBACK_DETAILS_FAIL, FEEDBACK_DETAILS_SUCCESS, FEEDBACK_DETAILS_REQUEST, FEEDBACK_LIST_FAIL, FEEDBACK_LIST_SUCCESS, FEEDBACK_LIST_REQUEST } from '../constants/feedbackConstants';\nimport { logout } from './userActions';\nexport const createFeedback = feedback => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: FEEDBACK_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/feedback`, feedback, config);\n    dispatch({\n      type: FEEDBACK_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: FEEDBACK_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const getFeedbackDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: FEEDBACK_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/feedback/${id}`);\n    dispatch({\n      type: FEEDBACK_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: FEEDBACK_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listFeedbacks = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: FEEDBACK_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/feedback`, config);\n    dispatch({\n      type: FEEDBACK_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: FEEDBACK_LIST_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Thakshan/Desktop/BookCorner/frontend/src/actions/feedbackActions.js"],"names":["axios","FEEDBACK_CREATE_REQUEST","FEEDBACK_CREATE_SUCCESS","FEEDBACK_CREATE_FAIL","FEEDBACK_DETAILS_FAIL","FEEDBACK_DETAILS_SUCCESS","FEEDBACK_DETAILS_REQUEST","FEEDBACK_LIST_FAIL","FEEDBACK_LIST_SUCCESS","FEEDBACK_LIST_REQUEST","logout","createFeedback","feedback","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","message","response","getFeedbackDetails","id","get","listFeedbacks"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\n\r\nimport {\r\n    FEEDBACK_CREATE_REQUEST,\r\n    FEEDBACK_CREATE_SUCCESS,\r\n    FEEDBACK_CREATE_FAIL,\r\n    FEEDBACK_DETAILS_FAIL,\r\n    FEEDBACK_DETAILS_SUCCESS,\r\n    FEEDBACK_DETAILS_REQUEST,\r\n    FEEDBACK_LIST_FAIL,\r\n    FEEDBACK_LIST_SUCCESS,\r\n    FEEDBACK_LIST_REQUEST,\r\n   \r\n  } from '../constants/feedbackConstants'\r\n  import { logout } from './userActions'\r\n\r\n\r\n\r\n  export const createFeedback = (feedback) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: FEEDBACK_CREATE_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.post(`/api/feedback`,feedback, config)\r\n  \r\n      dispatch({\r\n        type: FEEDBACK_CREATE_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      if (message === 'Not authorized, token failed') {\r\n        dispatch(logout())\r\n      }\r\n      dispatch({\r\n        type: FEEDBACK_CREATE_FAIL,\r\n        payload: message,\r\n      })\r\n    }\r\n  }\r\n  \r\n\r\n  export const getFeedbackDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({type: FEEDBACK_DETAILS_REQUEST})\r\n  \r\n      const { data } = await axios.get(`/api/feedback/${id}`)\r\n  \r\n      dispatch({\r\n        type: FEEDBACK_DETAILS_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      if (message === 'Not authorized, token failed') {\r\n        dispatch(logout())\r\n      }\r\n      dispatch({\r\n        type: FEEDBACK_DETAILS_FAIL,\r\n        payload: message,\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  export const listFeedbacks = () => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: FEEDBACK_LIST_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.get(`/api/feedback`, config)\r\n  \r\n      dispatch({\r\n        type: FEEDBACK_LIST_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      if (message === 'Not authorized, token failed') {\r\n        dispatch(logout())\r\n      }\r\n      dispatch({\r\n        type: FEEDBACK_LIST_FAIL,\r\n        payload: message,\r\n      })\r\n    }\r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}