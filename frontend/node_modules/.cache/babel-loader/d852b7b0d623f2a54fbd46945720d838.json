{"ast":null,"code":"var _jsxFileName = \"E:\\\\2.2\\\\Project I\\\\BookCorner\\\\frontend\\\\src\\\\screens\\\\RegisterScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Button, Row, Col, Form, Container, Alert, Spinner } from 'react-bootstrap';\nimport FormContainer from '../components/FormContainer';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { register } from '../actions/userActions';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport YupPassword from 'yup-password';\nYupPassword(yup);\n\nconst Loader = () => {\n  return /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    style: {\n      width: '100px',\n      height: '100px',\n      margin: 'auto',\n      display: 'block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  });\n};\n\nconst Message = ({\n  variant,\n  children\n}) => {\n  return /*#__PURE__*/React.createElement(Alert, {\n    variant: variant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }\n  }, children);\n};\n\nMessage.defaultProps = {\n  variant: 'info'\n};\n\nconst RegisterScreen = ({\n  location,\n  history\n}) => {\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    },\n    validationSchema: yup.object({\n      name: yup.string().max(20, 'Maximum 20 characters only').required(),\n      email: yup.string().email().required(),\n      password: yup.string().required('Password is required').password(),\n      confirmPassword: yup.string().required('Confirm Password is required').oneOf([yup.ref('password'), null], 'Confirm password and password must be same')\n    }),\n    onSubmit: userInputData => {\n      dispatch(register(userInputData.name, userInputData.email, userInputData.password));\n    }\n  });\n  const [message] = useState(null);\n  const userRegister = useSelector(state => state.userRegister);\n  const {\n    loading,\n    error,\n    userInfo\n  } = userRegister;\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n  return /*#__PURE__*/React.createElement(FormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-2 my-5\",\n    style: {\n      background: \"white\",\n      borderRadius: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"tag \",\n    style: {\n      fontSize: '35px',\n      fontFamily: 'Times New Roman',\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"Sign Up\"), message && /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, message), error && /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }\n  }, error), loading && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"mt-3\",\n    style: {\n      fontSize: '18px',\n      fontWeight: 'bold',\n      color: '#591f1f',\n      marginLeft: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"name\",\n    name: \"name\",\n    placeholder: \"Enter the name\",\n    style: {\n      borderRadius: \"10px\",\n      width: \"80%\",\n      marginLeft: \"40px\"\n    },\n    value: formik.values.name,\n    onChange: formik.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), formik.errors.name ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: \"40px\"\n    },\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, formik.errors.name) : null), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"mt-3\",\n    style: {\n      fontSize: '18px',\n      fontWeight: 'bold',\n      color: '#591f1f',\n      marginLeft: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"Enter the email\",\n    name: \"email\",\n    style: {\n      borderRadius: \"10px\",\n      width: \"80%\",\n      marginLeft: \"40px\"\n    },\n    value: formik.values.email,\n    onChange: formik.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), formik.errors.email ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: \"40px\"\n    },\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, formik.errors.email) : null), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"mt-3\",\n    style: {\n      fontSize: '18px',\n      fontWeight: 'bold',\n      color: '#591f1f',\n      marginLeft: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Enter the password\",\n    name: \"password\",\n    style: {\n      borderRadius: \"10px\",\n      width: \"80%\",\n      marginLeft: \"40px\"\n    },\n    value: formik.values.password,\n    onChange: formik.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }), formik.errors.password ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: \"40px\"\n    },\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, formik.errors.password) : null), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"confirmPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"mt-3\",\n    style: {\n      fontSize: '18px',\n      fontWeight: 'bold',\n      color: '#591f1f',\n      marginLeft: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Confirm the password\",\n    name: \"confirmPassword\",\n    style: {\n      borderRadius: \"10px\",\n      width: \"80%\",\n      marginLeft: \"40px\"\n    },\n    value: formik.values.confirmPassword,\n    onChange: formik.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }), formik.errors.confirmPassword ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: \"40px\"\n    },\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, formik.errors.confirmPassword) : null), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"my-3\",\n    style: {\n      marginLeft: \"40px\",\n      width: '80%',\n      backgroundImage: 'linear-gradient(to bottom right,#50025c, #d20be0,#db3bb6)',\n      color: 'white',\n      fontWeight: '600'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, \"Register\")), /*#__PURE__*/React.createElement(Row, {\n    className: \"py-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontSize: '14px',\n      fontWeight: 'bold',\n      color: '#591f1f',\n      marginLeft: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, \" Have an Account?\", ' ', /*#__PURE__*/React.createElement(Link, {\n    style: {\n      color: \"blue\"\n    },\n    to: redirect ? `/login?redirect=${redirect}` : '/login',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, \"Login\"))))));\n};\n\nexport default RegisterScreen;","map":{"version":3,"sources":["E:/2.2/Project I/BookCorner/frontend/src/screens/RegisterScreen.js"],"names":["React","useState","useEffect","Button","Row","Col","Form","Container","Alert","Spinner","FormContainer","Link","useDispatch","useSelector","register","useFormik","yup","YupPassword","Loader","width","height","margin","display","Message","variant","children","defaultProps","RegisterScreen","location","history","dispatch","formik","initialValues","name","email","password","confirmPassword","validationSchema","object","string","max","required","oneOf","ref","onSubmit","userInputData","message","userRegister","state","loading","error","userInfo","redirect","search","split","push","background","borderRadius","fontSize","fontFamily","fontWeight","handleSubmit","color","marginLeft","values","handleChange","errors","backgroundImage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  Button,\n  Row,\n  Col,\n  Form,\n  Container,\n  Alert,\n  Spinner,\n} from 'react-bootstrap'\nimport FormContainer from '../components/FormContainer'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { register } from '../actions/userActions'\nimport { useFormik } from 'formik'\nimport * as yup from 'yup'\nimport YupPassword from 'yup-password'\nYupPassword(yup)\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation='border'\n      role='status'\n      style={{\n        width: '100px',\n        height: '100px',\n        margin: 'auto',\n        display: 'block',\n      }}\n    ></Spinner>\n  )\n}\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>\n}\n\nMessage.defaultProps = {\n  variant: 'info',\n}\n\n\nconst RegisterScreen = ({ location, history }) => {\n  const dispatch = useDispatch()\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n    },\n    validationSchema: yup.object({\n      name: yup.string().max(20, 'Maximum 20 characters only').required(),\n\n      email: yup.string().email().required(),\n\n      password: yup.string().required('Password is required').password(),\n\n      confirmPassword: yup\n        .string()\n        .required('Confirm Password is required')\n        .oneOf(\n          [yup.ref('password'), null],\n          'Confirm password and password must be same'\n        ),\n    }),\n    onSubmit: (userInputData) => {\n      dispatch(register(userInputData.name, userInputData.email, userInputData.password))\n    },\n  })\n\n \n  const [message] = useState(null)\n\n  const userRegister = useSelector((state) => state.userRegister)\n  const { loading, error, userInfo } = userRegister\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    useEffect(() => {\n      if (userInfo) {\n        history.push(redirect)\n      }\n    }, [history, userInfo, redirect])\n \n  return (\n    <FormContainer>   \n      <div className='p-2 my-5' style={{background:\"white\",borderRadius:\"10px\"}}> \n        <h1 className='tag ' style={{fontSize:'35px',fontFamily:'Times New Roman',fontWeight:'bold'}}>Sign Up</h1>\n        {message && <Message variant='danger'>{message}</Message>}\n        {error && <Message variant='danger'>{error}</Message>}\n        {loading && <Loader />}\n\n        <Form onSubmit={formik.handleSubmit}>\n          <Form.Group controlId='name'>\n            <Form.Label className='mt-3' style={{fontSize:'18px',fontWeight:'bold',color:'#591f1f',marginLeft:\"40px\"}}>Name</Form.Label>\n            <Form.Control\n              type='name'\n              name='name'\n              placeholder='Enter the name'\n              style={{borderRadius:\"10px\",width:\"80%\", marginLeft:\"40px\",}}\n              value={formik.values.name}\n             \n              onChange={formik.handleChange}\n            ></Form.Control>\n            {formik.errors.name ? (\n              <div style={{ marginLeft:\"40px\",}} className='text-danger'>{formik.errors.name}</div>\n            ) : null}\n          </Form.Group>\n\n          <Form.Group controlId='email'>\n            <Form.Label className='mt-3' style={{fontSize:'18px',fontWeight:'bold',color:'#591f1f',marginLeft:\"40px\"}}>Email Address</Form.Label>\n            <Form.Control\n              type='email'\n              placeholder='Enter the email'\n              name='email'\n              style={{borderRadius:\"10px\",width:\"80%\", marginLeft:\"40px\",}}\n              value={formik.values.email}\n              onChange={formik.handleChange}\n        \n            ></Form.Control>\n            {formik.errors.email ? (\n              <div style={{ marginLeft:\"40px\",}} className='text-danger'>{formik.errors.email}</div>\n            ) : null}\n          </Form.Group>\n\n          <Form.Group controlId='password'>\n            <Form.Label className='mt-3' style={{fontSize:'18px',fontWeight:'bold',color:'#591f1f',marginLeft:\"40px\"}}>Password</Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='Enter the password'\n              name='password'\n              style={{borderRadius:\"10px\",width:\"80%\", marginLeft:\"40px\",}}\n              value={formik.values.password}\n              onChange={formik.handleChange}\n            \n            ></Form.Control>\n            {formik.errors.password ? (\n              <div style={{ marginLeft:\"40px\",}} className='text-danger'>{formik.errors.password}</div>\n            ) : null}\n          </Form.Group>\n\n          <Form.Group controlId='confirmPassword'>\n            <Form.Label className='mt-3' style={{fontSize:'18px',fontWeight:'bold',color:'#591f1f',marginLeft:\"40px\"}}>Confirm Password</Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='Confirm the password'\n              name='confirmPassword'\n              style={{borderRadius:\"10px\",width:\"80%\", marginLeft:\"40px\"}}\n              value={formik.values.confirmPassword}\n            \n              onChange={formik.handleChange}\n            ></Form.Control>\n            {formik.errors.confirmPassword ? (\n              <div style={{ marginLeft:\"40px\",}} className='text-danger'>{formik.errors.confirmPassword}</div>\n            ) : null}\n          </Form.Group>\n\n          <Button type='submit' className='my-3' style={{ marginLeft:\"40px\", width:'80%',backgroundImage: 'linear-gradient(to bottom right,#50025c, #d20be0,#db3bb6)',color:'white',fontWeight:'600'}}>\n            Register\n          </Button>\n        </Form>\n\n        <Row className='py-3'>\n          <Col>\n          <p style={{fontSize:'14px',fontWeight:'bold',color:'#591f1f',marginLeft:\"40px\"}}> Have an Account?{' '}\n            <Link  style={{color:\"blue\"}} to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n              Login\n            </Link></p>\n          </Col>\n        </Row>\n        </div> \n    </FormContainer>\n  )\n}\n\nexport default RegisterScreen\n"]},"metadata":{},"sourceType":"module"}