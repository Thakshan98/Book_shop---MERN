{"ast":null,"code":"'use strict';\n/*!\n * ignore\n */\n\nmodule.exports = applyQueryMiddleware;\n/*!\n * ignore\n */\n\napplyQueryMiddleware.middlewareFunctions = ['count', 'countDocuments', 'deleteMany', 'deleteOne', 'distinct', 'estimatedDocumentCount', 'find', 'findOne', 'findOneAndDelete', 'findOneAndRemove', 'findOneAndReplace', 'findOneAndUpdate', 'remove', 'replaceOne', 'update', 'updateMany', 'updateOne', 'validate'];\n/*!\n * Apply query middleware\n *\n * @param {Query} query constructor\n * @param {Model} model\n */\n\nfunction applyQueryMiddleware(Query, model) {\n  const kareemOptions = {\n    useErrorHandlers: true,\n    numCallbackParams: 1,\n    nullResultByDefault: true\n  };\n  const middleware = model.hooks.filter(hook => {\n    const contexts = _getContexts(hook);\n\n    if (hook.name === 'updateOne') {\n      return contexts.query == null || !!contexts.query;\n    }\n\n    if (hook.name === 'deleteOne') {\n      return !!contexts.query || Object.keys(contexts).length === 0;\n    }\n\n    if (hook.name === 'validate' || hook.name === 'remove') {\n      return !!contexts.query;\n    }\n\n    return true;\n  }); // `update()` thunk has a different name because `_update` was already taken\n\n  Query.prototype._execUpdate = middleware.createWrapper('update', Query.prototype._execUpdate, null, kareemOptions); // `distinct()` thunk has a different name because `_distinct` was already taken\n\n  Query.prototype.__distinct = middleware.createWrapper('distinct', Query.prototype.__distinct, null, kareemOptions); // `validate()` doesn't have a thunk because it doesn't execute a query.\n\n  Query.prototype.validate = middleware.createWrapper('validate', Query.prototype.validate, null, kareemOptions);\n  applyQueryMiddleware.middlewareFunctions.filter(v => v !== 'update' && v !== 'distinct' && v !== 'validate').forEach(fn => {\n    Query.prototype[`_${fn}`] = middleware.createWrapper(fn, Query.prototype[`_${fn}`], null, kareemOptions);\n  });\n}\n\nfunction _getContexts(hook) {\n  const ret = {};\n\n  if (hook.hasOwnProperty('query')) {\n    ret.query = hook.query;\n  }\n\n  if (hook.hasOwnProperty('document')) {\n    ret.document = hook.document;\n  }\n\n  return ret;\n}","map":{"version":3,"sources":["C:/Users/Thakshan/Desktop/BookCorner/node_modules/mongoose/lib/helpers/query/applyQueryMiddleware.js"],"names":["module","exports","applyQueryMiddleware","middlewareFunctions","Query","model","kareemOptions","useErrorHandlers","numCallbackParams","nullResultByDefault","middleware","hooks","filter","hook","contexts","_getContexts","name","query","Object","keys","length","prototype","_execUpdate","createWrapper","__distinct","validate","v","forEach","fn","ret","hasOwnProperty","document"],"mappings":"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","sourcesContent":["'use strict';\n\n/*!\n * ignore\n */\n\nmodule.exports = applyQueryMiddleware;\n\n/*!\n * ignore\n */\n\napplyQueryMiddleware.middlewareFunctions = [\n  'count',\n  'countDocuments',\n  'deleteMany',\n  'deleteOne',\n  'distinct',\n  'estimatedDocumentCount',\n  'find',\n  'findOne',\n  'findOneAndDelete',\n  'findOneAndRemove',\n  'findOneAndReplace',\n  'findOneAndUpdate',\n  'remove',\n  'replaceOne',\n  'update',\n  'updateMany',\n  'updateOne',\n  'validate'\n];\n\n/*!\n * Apply query middleware\n *\n * @param {Query} query constructor\n * @param {Model} model\n */\n\nfunction applyQueryMiddleware(Query, model) {\n  const kareemOptions = {\n    useErrorHandlers: true,\n    numCallbackParams: 1,\n    nullResultByDefault: true\n  };\n\n  const middleware = model.hooks.filter(hook => {\n    const contexts = _getContexts(hook);\n    if (hook.name === 'updateOne') {\n      return contexts.query == null || !!contexts.query;\n    }\n    if (hook.name === 'deleteOne') {\n      return !!contexts.query || Object.keys(contexts).length === 0;\n    }\n    if (hook.name === 'validate' || hook.name === 'remove') {\n      return !!contexts.query;\n    }\n    return true;\n  });\n\n  // `update()` thunk has a different name because `_update` was already taken\n  Query.prototype._execUpdate = middleware.createWrapper('update',\n    Query.prototype._execUpdate, null, kareemOptions);\n  // `distinct()` thunk has a different name because `_distinct` was already taken\n  Query.prototype.__distinct = middleware.createWrapper('distinct',\n    Query.prototype.__distinct, null, kareemOptions);\n\n  // `validate()` doesn't have a thunk because it doesn't execute a query.\n  Query.prototype.validate = middleware.createWrapper('validate',\n    Query.prototype.validate, null, kareemOptions);\n\n  applyQueryMiddleware.middlewareFunctions.\n    filter(v => v !== 'update' && v !== 'distinct' && v !== 'validate').\n    forEach(fn => {\n      Query.prototype[`_${fn}`] = middleware.createWrapper(fn,\n        Query.prototype[`_${fn}`], null, kareemOptions);\n    });\n}\n\nfunction _getContexts(hook) {\n  const ret = {};\n  if (hook.hasOwnProperty('query')) {\n    ret.query = hook.query;\n  }\n  if (hook.hasOwnProperty('document')) {\n    ret.document = hook.document;\n  }\n  return ret;\n}"]},"metadata":{},"sourceType":"script"}