{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderPayCashReducer, orderDeliverReducer, orderListMyReducer, orderListReducer, orderShowReducer, orderDeleteReducer } from './reducers/orderReducers';\nimport { feedbackCreateReducer, feedbackDetailsReducer, feedbackListReducer } from './reducers/feedbackReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderPayCash: orderPayCashReducer,\n  orderShow: orderShowReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n  orderDelete: orderDeleteReducer,\n  feedbackCreate: feedbackCreateReducer,\n  feedbackDetails: feedbackDetailsReducer,\n  feedbackList: feedbackListReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/Thakshan/Desktop/BookCorner/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","productReviewCreateReducer","productTopRatedReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderPayCashReducer","orderDeliverReducer","orderListMyReducer","orderListReducer","orderShowReducer","orderDeleteReducer","feedbackCreateReducer","feedbackDetailsReducer","feedbackListReducer","reducer","productList","productDetails","productDelete","productCreate","productUpdate","productReviewCreate","productTopRated","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderPayCash","orderShow","orderDeliver","orderListMy","orderList","orderDelete","feedbackCreate","feedbackDetails","feedbackList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"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","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productReviewCreateReducer,\n  productTopRatedReducer,\n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from './reducers/userReducers'\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderPayCashReducer,\n  orderDeliverReducer,\n  orderListMyReducer,\n  orderListReducer,\n  orderShowReducer,\n  orderDeleteReducer,\n} from './reducers/orderReducers'\nimport {\n  feedbackCreateReducer,\n  feedbackDetailsReducer,\n  feedbackListReducer,\n} from './reducers/feedbackReducers'\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderPayCash: orderPayCashReducer,\n  orderShow:orderShowReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n  orderDelete:orderDeleteReducer,\n  feedbackCreate: feedbackCreateReducer,\n  feedbackDetails: feedbackDetailsReducer,\n  feedbackList: feedbackListReducer,\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : {}\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}