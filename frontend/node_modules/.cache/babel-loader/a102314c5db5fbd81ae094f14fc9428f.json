{"ast":null,"code":"import axios from 'axios';\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants';\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_FAIL, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_REQUEST, ORDER_PAY_FAIL, ORDER_PAY_SUCCESS, ORDER_PAY_REQUEST, ORDER_PAYCASH_FAIL, ORDER_PAYCASH_SUCCESS, ORDER_PAYCASH_REQUEST, ORDER_SHOW_FAIL, ORDER_SHOW_SUCCESS, ORDER_SHOW_REQUEST, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_FAIL, ORDER_LIST_SUCCESS, ORDER_LIST_REQUEST, ORDER_DELIVER_FAIL, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_REQUEST, ORDER_DELETE_SUCCESS, ORDER_DELETE_REQUEST, ORDER_DELETE_FAIL } from '../constants/orderConstants';\nimport { logout } from './userActions';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: data\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message\n    });\n  }\n};\nexport const payCashOrder = orderId => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAYCASH_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/paycash`, {}, config);\n    dispatch({\n      type: ORDER_PAYCASH_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_PAYCASH_FAIL,\n      payload: message\n    });\n  }\n};\nexport const showOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_SHOW_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${order._id}/show`, {}, config);\n    dispatch({\n      type: ORDER_SHOW_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_SHOW_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deliverOrder = (orderId, show) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/deliver`, show, config);\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/myorders`, config);\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders`, config);\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteOrder = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DELETE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_DELETE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Thakshan/Desktop/BookCorner/frontend/src/actions/orderActions.js"],"names":["axios","CART_CLEAR_ITEMS","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_FAIL","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_REQUEST","ORDER_PAY_FAIL","ORDER_PAY_SUCCESS","ORDER_PAY_REQUEST","ORDER_PAYCASH_FAIL","ORDER_PAYCASH_SUCCESS","ORDER_PAYCASH_REQUEST","ORDER_SHOW_FAIL","ORDER_SHOW_SUCCESS","ORDER_SHOW_REQUEST","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_FAIL","ORDER_LIST_SUCCESS","ORDER_LIST_REQUEST","ORDER_DELIVER_FAIL","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_REQUEST","ORDER_DELETE_SUCCESS","ORDER_DELETE_REQUEST","ORDER_DELETE_FAIL","logout","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","localStorage","removeItem","error","message","response","getOrderDetails","id","get","payOrder","orderId","paymentResult","put","payCashOrder","showOrder","_id","deliverOrder","show","listMyOrders","listOrders","deleteOrder","delete"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_REQUEST,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_REQUEST,\n  ORDER_PAYCASH_FAIL,\n  ORDER_PAYCASH_SUCCESS,\n  ORDER_PAYCASH_REQUEST,\n  ORDER_SHOW_FAIL,\n  ORDER_SHOW_SUCCESS,\n  ORDER_SHOW_REQUEST,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELETE_SUCCESS,\n  ORDER_DELETE_REQUEST,\n  ORDER_DELETE_FAIL,\n} from '../constants/orderConstants'\nimport { logout } from './userActions'\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`/api/orders`, order, config)\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    })\n    dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: data,\n    })\n    localStorage.removeItem('cartItems')\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders/${id}`, config)\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const payOrder = (orderId, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${orderId}/pay`,\n      paymentResult,\n      config\n    )\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message,\n    })\n  }\n}\nexport const payCashOrder = (orderId) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: ORDER_PAYCASH_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        \n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${orderId}/paycash`,{},\n      config\n    )\n\n    dispatch({\n      type: ORDER_PAYCASH_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_PAYCASH_FAIL,\n      payload: message,\n    })\n  }\n}\nexport const showOrder = (order) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: ORDER_SHOW_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        \n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${order._id}/show`,{},\n      config\n    )\n\n    dispatch({\n      type: ORDER_SHOW_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_SHOW_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const deliverOrder = (orderId,show) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${orderId}/deliver`,\n      show,\n      config\n    )\n\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders/myorders`, config)\n\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders`, config)\n\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const deleteOrder = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/orders/${id}`, config)\n\n    dispatch({\n      type: ORDER_DELETE_SUCCESS,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_DELETE_FAIL,\n      payload: message,\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}