{"ast":null,"code":"/* eslint no-func-assign: 1 */\n\n/*!\n * Module dependencies.\n */\n'use strict';\n\nconst Document = require('../document_provider')();\n\nconst EventEmitter = require('events').EventEmitter;\n\nconst ValidationError = require('../error/validation');\n\nconst immediate = require('../helpers/immediate');\n\nconst internalToObjectOptions = require('../options').internalToObjectOptions;\n\nconst get = require('../helpers/get');\n\nconst promiseOrCallback = require('../helpers/promiseOrCallback');\n\nconst util = require('util');\n\nconst documentArrayParent = require('../helpers/symbols').documentArrayParent;\n\nconst validatorErrorSymbol = require('../helpers/symbols').validatorErrorSymbol;\n/**\n * EmbeddedDocument constructor.\n *\n * @param {Object} obj js object returned from the db\n * @param {MongooseDocumentArray} parentArr the parent array of this document\n * @param {Boolean} skipId\n * @inherits Document\n * @api private\n */\n\n\nfunction EmbeddedDocument(obj, parentArr, skipId, fields, index) {\n  if (parentArr != null && parentArr.isMongooseDocumentArray) {\n    this.__parentArray = parentArr;\n    this[documentArrayParent] = parentArr.$parent();\n  } else {\n    this.__parentArray = undefined;\n    this[documentArrayParent] = undefined;\n  }\n\n  this.$setIndex(index);\n  this.$isDocumentArrayElement = true;\n  Document.call(this, obj, fields, skipId);\n\n  const _this = this;\n\n  this.on('isNew', function (val) {\n    _this.isNew = val;\n  });\n\n  _this.on('save', function () {\n    _this.constructor.emit('save', _this);\n  });\n}\n/*!\n * Inherit from Document\n */\n\n\nEmbeddedDocument.prototype = Object.create(Document.prototype);\nEmbeddedDocument.prototype.constructor = EmbeddedDocument;\n\nfor (const i in EventEmitter.prototype) {\n  EmbeddedDocument[i] = EventEmitter.prototype[i];\n}\n\nEmbeddedDocument.prototype.toBSON = function () {\n  return this.toObject(internalToObjectOptions);\n};\n/*!\n * ignore\n */\n\n\nEmbeddedDocument.prototype.$setIndex = function (index) {\n  this.__index = index;\n\n  if (get(this, '$__.validationError', null) != null) {\n    const keys = Object.keys(this.$__.validationError.errors);\n\n    for (const key of keys) {\n      this.invalidate(key, this.$__.validationError.errors[key]);\n    }\n  }\n};\n/**\n * Marks the embedded doc modified.\n *\n * ####Example:\n *\n *     const doc = blogpost.comments.id(hexstring);\n *     doc.mixed.type = 'changed';\n *     doc.markModified('mixed.type');\n *\n * @param {String} path the path which changed\n * @api public\n * @receiver EmbeddedDocument\n */\n\n\nEmbeddedDocument.prototype.markModified = function (path) {\n  this.$__.activePaths.modify(path);\n\n  if (!this.__parentArray) {\n    return;\n  }\n\n  if (this.isNew) {\n    // Mark the WHOLE parent array as modified\n    // if this is a new document (i.e., we are initializing\n    // a document),\n    this.__parentArray._markModified();\n  } else {\n    this.__parentArray._markModified(this, path);\n  }\n};\n/*!\n * ignore\n */\n\n\nEmbeddedDocument.prototype.populate = function () {\n  throw new Error('Mongoose does not support calling populate() on nested ' + 'docs. Instead of `doc.arr[0].populate(\"path\")`, use ' + '`doc.populate(\"arr.0.path\")`');\n};\n/**\n * Used as a stub for [hooks.js](https://github.com/bnoguchi/hooks-js/tree/31ec571cef0332e21121ee7157e0cf9728572cc3)\n *\n * ####NOTE:\n *\n * _This is a no-op. Does not actually save the doc to the db._\n *\n * @param {Function} [fn]\n * @return {Promise} resolved Promise\n * @api private\n */\n\n\nEmbeddedDocument.prototype.save = function (options, fn) {\n  if (typeof options === 'function') {\n    fn = options;\n    options = {};\n  }\n\n  options = options || {};\n\n  if (!options.suppressWarning) {\n    console.warn('mongoose: calling `save()` on a subdoc does **not** save ' + 'the document to MongoDB, it only runs save middleware. ' + 'Use `subdoc.save({ suppressWarning: true })` to hide this warning ' + 'if you\\'re sure this behavior is right for your app.');\n  }\n\n  return promiseOrCallback(fn, cb => {\n    this.$__save(cb);\n  });\n};\n/**\n * Used as a stub for middleware\n *\n * ####NOTE:\n *\n * _This is a no-op. Does not actually save the doc to the db._\n *\n * @param {Function} [fn]\n * @method $__save\n * @api private\n */\n\n\nEmbeddedDocument.prototype.$__save = function (fn) {\n  return immediate(() => fn(null, this));\n};\n/*!\n * Registers remove event listeners for triggering\n * on subdocuments.\n *\n * @param {EmbeddedDocument} sub\n * @api private\n */\n\n\nfunction registerRemoveListener(sub) {\n  let owner = sub.ownerDocument();\n\n  function emitRemove() {\n    owner.removeListener('save', emitRemove);\n    owner.removeListener('remove', emitRemove);\n    sub.emit('remove', sub);\n    sub.constructor.emit('remove', sub);\n    owner = sub = null;\n  }\n\n  owner.on('save', emitRemove);\n  owner.on('remove', emitRemove);\n}\n/*!\n * no-op for hooks\n */\n\n\nEmbeddedDocument.prototype.$__remove = function (cb) {\n  return cb(null, this);\n};\n/**\n * Removes the subdocument from its parent array.\n *\n * @param {Object} [options]\n * @param {Function} [fn]\n * @api public\n */\n\n\nEmbeddedDocument.prototype.remove = function (options, fn) {\n  if (typeof options === 'function' && !fn) {\n    fn = options;\n    options = undefined;\n  }\n\n  if (!this.__parentArray || options && options.noop) {\n    fn && fn(null);\n    return this;\n  }\n\n  let _id;\n\n  if (!this.willRemove) {\n    _id = this._doc._id;\n\n    if (!_id) {\n      throw new Error('For your own good, Mongoose does not know ' + 'how to remove an EmbeddedDocument that has no _id');\n    }\n\n    this.__parentArray.pull({\n      _id: _id\n    });\n\n    this.willRemove = true;\n    registerRemoveListener(this);\n  }\n\n  if (fn) {\n    fn(null);\n  }\n\n  return this;\n};\n/**\n * Override #update method of parent documents.\n * @api private\n */\n\n\nEmbeddedDocument.prototype.update = function () {\n  throw new Error('The #update method is not available on EmbeddedDocuments');\n};\n/**\n * Helper for console.log\n *\n * @api public\n */\n\n\nEmbeddedDocument.prototype.inspect = function () {\n  return this.toObject({\n    transform: false,\n    virtuals: false,\n    flattenDecimals: false\n  });\n};\n\nif (util.inspect.custom) {\n  /*!\n  * Avoid Node deprecation warning DEP0079\n  */\n  EmbeddedDocument.prototype[util.inspect.custom] = EmbeddedDocument.prototype.inspect;\n}\n/**\n * Marks a path as invalid, causing validation to fail.\n *\n * @param {String} path the field to invalidate\n * @param {String|Error} err error which states the reason `path` was invalid\n * @return {Boolean}\n * @api public\n */\n\n\nEmbeddedDocument.prototype.invalidate = function (path, err, val) {\n  Document.prototype.invalidate.call(this, path, err, val);\n\n  if (!this[documentArrayParent] || this.__index == null) {\n    if (err[validatorErrorSymbol] || err instanceof ValidationError) {\n      return this.ownerDocument().$__.validationError;\n    }\n\n    throw err;\n  }\n\n  const index = this.__index;\n\n  const parentPath = this.__parentArray.$path();\n\n  const fullPath = [parentPath, index, path].join('.');\n  this[documentArrayParent].invalidate(fullPath, err, val);\n  return this.ownerDocument().$__.validationError;\n};\n/**\n * Marks a path as valid, removing existing validation errors.\n *\n * @param {String} path the field to mark as valid\n * @api private\n * @method $markValid\n * @receiver EmbeddedDocument\n */\n\n\nEmbeddedDocument.prototype.$markValid = function (path) {\n  if (!this[documentArrayParent]) {\n    return;\n  }\n\n  const index = this.__index;\n\n  if (typeof index !== 'undefined') {\n    const parentPath = this.__parentArray.$path();\n\n    const fullPath = [parentPath, index, path].join('.');\n    this[documentArrayParent].$markValid(fullPath);\n  }\n};\n/*!\n * ignore\n */\n\n\nEmbeddedDocument.prototype.$ignore = function (path) {\n  Document.prototype.$ignore.call(this, path);\n\n  if (!this[documentArrayParent]) {\n    return;\n  }\n\n  const index = this.__index;\n\n  if (typeof index !== 'undefined') {\n    const parentPath = this.__parentArray.$path();\n\n    const fullPath = [parentPath, index, path].join('.');\n    this[documentArrayParent].$ignore(fullPath);\n  }\n};\n/**\n * Checks if a path is invalid\n *\n * @param {String} path the field to check\n * @api private\n * @method $isValid\n * @receiver EmbeddedDocument\n */\n\n\nEmbeddedDocument.prototype.$isValid = function (path) {\n  const index = this.__index;\n\n  if (typeof index !== 'undefined' && this[documentArrayParent]) {\n    return !this[documentArrayParent].$__.validationError || !this[documentArrayParent].$__.validationError.errors[this.$__fullPath(path)];\n  }\n\n  return true;\n};\n/**\n * Returns the top level document of this sub-document.\n *\n * @return {Document}\n */\n\n\nEmbeddedDocument.prototype.ownerDocument = function () {\n  if (this.$__.ownerDocument) {\n    return this.$__.ownerDocument;\n  }\n\n  let parent = this[documentArrayParent];\n\n  if (!parent) {\n    return this;\n  }\n\n  while (parent[documentArrayParent] || parent.$parent) {\n    parent = parent[documentArrayParent] || parent.$parent;\n  }\n\n  this.$__.ownerDocument = parent;\n  return this.$__.ownerDocument;\n};\n/**\n * Returns the full path to this document. If optional `path` is passed, it is appended to the full path.\n *\n * @param {String} [path]\n * @return {String}\n * @api private\n * @method $__fullPath\n * @memberOf EmbeddedDocument\n * @instance\n */\n\n\nEmbeddedDocument.prototype.$__fullPath = function (path) {\n  if (!this.$__.fullPath) {\n    let parent = this; // eslint-disable-line consistent-this\n\n    if (!parent[documentArrayParent]) {\n      return path;\n    }\n\n    const paths = [];\n\n    while (parent[documentArrayParent] || parent.$parent) {\n      if (parent[documentArrayParent]) {\n        paths.unshift(parent.__parentArray.$path());\n      } else {\n        paths.unshift(parent.$basePath);\n      }\n\n      parent = parent[documentArrayParent] || parent.$parent;\n    }\n\n    this.$__.fullPath = paths.join('.');\n\n    if (!this.$__.ownerDocument) {\n      // optimization\n      this.$__.ownerDocument = parent;\n    }\n  }\n\n  return path ? this.$__.fullPath + '.' + path : this.$__.fullPath;\n};\n/**\n * Returns this sub-documents parent document.\n *\n * @api public\n */\n\n\nEmbeddedDocument.prototype.parent = function () {\n  return this[documentArrayParent];\n};\n/**\n * Returns this sub-documents parent array.\n *\n * @api public\n */\n\n\nEmbeddedDocument.prototype.parentArray = function () {\n  return this.__parentArray;\n};\n/*!\n * Module exports.\n */\n\n\nmodule.exports = EmbeddedDocument;","map":{"version":3,"sources":["C:/Users/Thakshan/Desktop/BookCorner/node_modules/mongoose/lib/types/embedded.js"],"names":["Document","require","EventEmitter","ValidationError","immediate","internalToObjectOptions","get","promiseOrCallback","util","documentArrayParent","validatorErrorSymbol","EmbeddedDocument","obj","parentArr","skipId","fields","index","isMongooseDocumentArray","__parentArray","$parent","undefined","$setIndex","$isDocumentArrayElement","call","_this","on","val","isNew","constructor","emit","prototype","Object","create","i","toBSON","toObject","__index","keys","$__","validationError","errors","key","invalidate","markModified","path","activePaths","modify","_markModified","populate","Error","save","options","fn","suppressWarning","console","warn","cb","$__save","registerRemoveListener","sub","owner","ownerDocument","emitRemove","removeListener","$__remove","remove","noop","_id","willRemove","_doc","pull","update","inspect","transform","virtuals","flattenDecimals","custom","err","parentPath","$path","fullPath","join","$markValid","$ignore","$isValid","$__fullPath","parent","paths","unshift","$basePath","parentArray","module","exports"],"mappings":"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","sourcesContent":["/* eslint no-func-assign: 1 */\n\n/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst Document = require('../document_provider')();\nconst EventEmitter = require('events').EventEmitter;\nconst ValidationError = require('../error/validation');\nconst immediate = require('../helpers/immediate');\nconst internalToObjectOptions = require('../options').internalToObjectOptions;\nconst get = require('../helpers/get');\nconst promiseOrCallback = require('../helpers/promiseOrCallback');\nconst util = require('util');\n\nconst documentArrayParent = require('../helpers/symbols').documentArrayParent;\nconst validatorErrorSymbol = require('../helpers/symbols').validatorErrorSymbol;\n\n/**\n * EmbeddedDocument constructor.\n *\n * @param {Object} obj js object returned from the db\n * @param {MongooseDocumentArray} parentArr the parent array of this document\n * @param {Boolean} skipId\n * @inherits Document\n * @api private\n */\n\nfunction EmbeddedDocument(obj, parentArr, skipId, fields, index) {\n  if (parentArr != null && parentArr.isMongooseDocumentArray) {\n    this.__parentArray = parentArr;\n    this[documentArrayParent] = parentArr.$parent();\n  } else {\n    this.__parentArray = undefined;\n    this[documentArrayParent] = undefined;\n  }\n  this.$setIndex(index);\n  this.$isDocumentArrayElement = true;\n\n  Document.call(this, obj, fields, skipId);\n\n  const _this = this;\n  this.on('isNew', function(val) {\n    _this.isNew = val;\n  });\n\n  _this.on('save', function() {\n    _this.constructor.emit('save', _this);\n  });\n}\n\n/*!\n * Inherit from Document\n */\nEmbeddedDocument.prototype = Object.create(Document.prototype);\nEmbeddedDocument.prototype.constructor = EmbeddedDocument;\n\nfor (const i in EventEmitter.prototype) {\n  EmbeddedDocument[i] = EventEmitter.prototype[i];\n}\n\nEmbeddedDocument.prototype.toBSON = function() {\n  return this.toObject(internalToObjectOptions);\n};\n\n/*!\n * ignore\n */\n\nEmbeddedDocument.prototype.$setIndex = function(index) {\n  this.__index = index;\n\n  if (get(this, '$__.validationError', null) != null) {\n    const keys = Object.keys(this.$__.validationError.errors);\n    for (const key of keys) {\n      this.invalidate(key, this.$__.validationError.errors[key]);\n    }\n  }\n};\n\n/**\n * Marks the embedded doc modified.\n *\n * ####Example:\n *\n *     const doc = blogpost.comments.id(hexstring);\n *     doc.mixed.type = 'changed';\n *     doc.markModified('mixed.type');\n *\n * @param {String} path the path which changed\n * @api public\n * @receiver EmbeddedDocument\n */\n\nEmbeddedDocument.prototype.markModified = function(path) {\n  this.$__.activePaths.modify(path);\n  if (!this.__parentArray) {\n    return;\n  }\n\n  if (this.isNew) {\n    // Mark the WHOLE parent array as modified\n    // if this is a new document (i.e., we are initializing\n    // a document),\n    this.__parentArray._markModified();\n  } else {\n    this.__parentArray._markModified(this, path);\n  }\n};\n\n/*!\n * ignore\n */\n\nEmbeddedDocument.prototype.populate = function() {\n  throw new Error('Mongoose does not support calling populate() on nested ' +\n    'docs. Instead of `doc.arr[0].populate(\"path\")`, use ' +\n    '`doc.populate(\"arr.0.path\")`');\n};\n\n/**\n * Used as a stub for [hooks.js](https://github.com/bnoguchi/hooks-js/tree/31ec571cef0332e21121ee7157e0cf9728572cc3)\n *\n * ####NOTE:\n *\n * _This is a no-op. Does not actually save the doc to the db._\n *\n * @param {Function} [fn]\n * @return {Promise} resolved Promise\n * @api private\n */\n\nEmbeddedDocument.prototype.save = function(options, fn) {\n  if (typeof options === 'function') {\n    fn = options;\n    options = {};\n  }\n  options = options || {};\n\n  if (!options.suppressWarning) {\n    console.warn('mongoose: calling `save()` on a subdoc does **not** save ' +\n      'the document to MongoDB, it only runs save middleware. ' +\n      'Use `subdoc.save({ suppressWarning: true })` to hide this warning ' +\n      'if you\\'re sure this behavior is right for your app.');\n  }\n\n  return promiseOrCallback(fn, cb => {\n    this.$__save(cb);\n  });\n};\n\n/**\n * Used as a stub for middleware\n *\n * ####NOTE:\n *\n * _This is a no-op. Does not actually save the doc to the db._\n *\n * @param {Function} [fn]\n * @method $__save\n * @api private\n */\n\nEmbeddedDocument.prototype.$__save = function(fn) {\n  return immediate(() => fn(null, this));\n};\n\n/*!\n * Registers remove event listeners for triggering\n * on subdocuments.\n *\n * @param {EmbeddedDocument} sub\n * @api private\n */\n\nfunction registerRemoveListener(sub) {\n  let owner = sub.ownerDocument();\n\n  function emitRemove() {\n    owner.removeListener('save', emitRemove);\n    owner.removeListener('remove', emitRemove);\n    sub.emit('remove', sub);\n    sub.constructor.emit('remove', sub);\n    owner = sub = null;\n  }\n\n  owner.on('save', emitRemove);\n  owner.on('remove', emitRemove);\n}\n\n/*!\n * no-op for hooks\n */\n\nEmbeddedDocument.prototype.$__remove = function(cb) {\n  return cb(null, this);\n};\n\n/**\n * Removes the subdocument from its parent array.\n *\n * @param {Object} [options]\n * @param {Function} [fn]\n * @api public\n */\n\nEmbeddedDocument.prototype.remove = function(options, fn) {\n  if (typeof options === 'function' && !fn) {\n    fn = options;\n    options = undefined;\n  }\n  if (!this.__parentArray || (options && options.noop)) {\n    fn && fn(null);\n    return this;\n  }\n\n  let _id;\n  if (!this.willRemove) {\n    _id = this._doc._id;\n    if (!_id) {\n      throw new Error('For your own good, Mongoose does not know ' +\n          'how to remove an EmbeddedDocument that has no _id');\n    }\n    this.__parentArray.pull({ _id: _id });\n    this.willRemove = true;\n    registerRemoveListener(this);\n  }\n\n  if (fn) {\n    fn(null);\n  }\n\n  return this;\n};\n\n/**\n * Override #update method of parent documents.\n * @api private\n */\n\nEmbeddedDocument.prototype.update = function() {\n  throw new Error('The #update method is not available on EmbeddedDocuments');\n};\n\n/**\n * Helper for console.log\n *\n * @api public\n */\n\nEmbeddedDocument.prototype.inspect = function() {\n  return this.toObject({\n    transform: false,\n    virtuals: false,\n    flattenDecimals: false\n  });\n};\n\nif (util.inspect.custom) {\n  /*!\n  * Avoid Node deprecation warning DEP0079\n  */\n\n  EmbeddedDocument.prototype[util.inspect.custom] = EmbeddedDocument.prototype.inspect;\n}\n\n/**\n * Marks a path as invalid, causing validation to fail.\n *\n * @param {String} path the field to invalidate\n * @param {String|Error} err error which states the reason `path` was invalid\n * @return {Boolean}\n * @api public\n */\n\nEmbeddedDocument.prototype.invalidate = function(path, err, val) {\n  Document.prototype.invalidate.call(this, path, err, val);\n\n  if (!this[documentArrayParent] || this.__index == null) {\n    if (err[validatorErrorSymbol] || err instanceof ValidationError) {\n      return this.ownerDocument().$__.validationError;\n    }\n    throw err;\n  }\n\n  const index = this.__index;\n  const parentPath = this.__parentArray.$path();\n  const fullPath = [parentPath, index, path].join('.');\n  this[documentArrayParent].invalidate(fullPath, err, val);\n\n  return this.ownerDocument().$__.validationError;\n};\n\n/**\n * Marks a path as valid, removing existing validation errors.\n *\n * @param {String} path the field to mark as valid\n * @api private\n * @method $markValid\n * @receiver EmbeddedDocument\n */\n\nEmbeddedDocument.prototype.$markValid = function(path) {\n  if (!this[documentArrayParent]) {\n    return;\n  }\n\n  const index = this.__index;\n  if (typeof index !== 'undefined') {\n    const parentPath = this.__parentArray.$path();\n    const fullPath = [parentPath, index, path].join('.');\n    this[documentArrayParent].$markValid(fullPath);\n  }\n};\n\n/*!\n * ignore\n */\n\nEmbeddedDocument.prototype.$ignore = function(path) {\n  Document.prototype.$ignore.call(this, path);\n\n  if (!this[documentArrayParent]) {\n    return;\n  }\n\n  const index = this.__index;\n  if (typeof index !== 'undefined') {\n    const parentPath = this.__parentArray.$path();\n    const fullPath = [parentPath, index, path].join('.');\n    this[documentArrayParent].$ignore(fullPath);\n  }\n};\n\n/**\n * Checks if a path is invalid\n *\n * @param {String} path the field to check\n * @api private\n * @method $isValid\n * @receiver EmbeddedDocument\n */\n\nEmbeddedDocument.prototype.$isValid = function(path) {\n  const index = this.__index;\n  if (typeof index !== 'undefined' && this[documentArrayParent]) {\n    return !this[documentArrayParent].$__.validationError ||\n      !this[documentArrayParent].$__.validationError.errors[this.$__fullPath(path)];\n  }\n\n  return true;\n};\n\n/**\n * Returns the top level document of this sub-document.\n *\n * @return {Document}\n */\n\nEmbeddedDocument.prototype.ownerDocument = function() {\n  if (this.$__.ownerDocument) {\n    return this.$__.ownerDocument;\n  }\n\n  let parent = this[documentArrayParent];\n  if (!parent) {\n    return this;\n  }\n\n  while (parent[documentArrayParent] || parent.$parent) {\n    parent = parent[documentArrayParent] || parent.$parent;\n  }\n\n  this.$__.ownerDocument = parent;\n  return this.$__.ownerDocument;\n};\n\n/**\n * Returns the full path to this document. If optional `path` is passed, it is appended to the full path.\n *\n * @param {String} [path]\n * @return {String}\n * @api private\n * @method $__fullPath\n * @memberOf EmbeddedDocument\n * @instance\n */\n\nEmbeddedDocument.prototype.$__fullPath = function(path) {\n  if (!this.$__.fullPath) {\n    let parent = this; // eslint-disable-line consistent-this\n    if (!parent[documentArrayParent]) {\n      return path;\n    }\n\n    const paths = [];\n    while (parent[documentArrayParent] || parent.$parent) {\n      if (parent[documentArrayParent]) {\n        paths.unshift(parent.__parentArray.$path());\n      } else {\n        paths.unshift(parent.$basePath);\n      }\n      parent = parent[documentArrayParent] || parent.$parent;\n    }\n\n    this.$__.fullPath = paths.join('.');\n\n    if (!this.$__.ownerDocument) {\n      // optimization\n      this.$__.ownerDocument = parent;\n    }\n  }\n\n  return path\n    ? this.$__.fullPath + '.' + path\n    : this.$__.fullPath;\n};\n\n/**\n * Returns this sub-documents parent document.\n *\n * @api public\n */\n\nEmbeddedDocument.prototype.parent = function() {\n  return this[documentArrayParent];\n};\n\n/**\n * Returns this sub-documents parent array.\n *\n * @api public\n */\n\nEmbeddedDocument.prototype.parentArray = function() {\n  return this.__parentArray;\n};\n\n/*!\n * Module exports.\n */\n\nmodule.exports = EmbeddedDocument;\n"]},"metadata":{},"sourceType":"script"}