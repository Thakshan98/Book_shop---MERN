{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thakshan\\\\Desktop\\\\BookCorner\\\\frontend\\\\src\\\\screens\\\\ProfileScreen.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\nimport { deleteOrder, listMyOrders, showOrder } from '../actions/orderActions';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\nimport { ORDER_SHOW_RESET } from '../constants/orderConstants';\nimport { confirm } from \"react-confirm-box\";\nimport { IdleTimerProvider } from 'react-idle-timer';\n\nconst ProfileScreen = ({\n  location,\n  history\n}) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [message, setMessage] = useState(null);\n  const [num, setNum] = useState(0);\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const orderDetails = useSelector(state => state.orderDetails);\n  const {\n    order\n  } = orderDetails;\n  const orderShow = useSelector(state => state.orderShow);\n  const {\n    loading: loadingShow,\n    success: successShow\n  } = orderShow;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  const orderListMy = useSelector(state => state.orderListMy);\n  const {\n    loading: loadingOrders,\n    error: errorOrders,\n    orders\n  } = orderListMy;\n  const orderDelete = useSelector(state => state.orderDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete\n  } = orderDelete;\n  useEffect(() => {\n    let i = setNum(num + 1);\n\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      if (!user || !user.name || success) {\n        dispatch({\n          type: USER_UPDATE_PROFILE_RESET\n        });\n        dispatch(getUserDetails('profile'));\n        dispatch(listMyOrders());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user, success, successDelete, orderListMy, successShow]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n    } else {\n      dispatch(updateUserProfile({\n        id: user._id,\n        name,\n        email,\n        password,\n        currentPassword\n      }));\n    }\n  };\n\n  const options = {\n    labels: {\n      confirmable: \"Confirm\",\n      cancellable: \"Cancel\"\n    }\n  };\n\n  const deleteHandler = async id => {\n    const result = await confirm(\"Are you sure?\", options);\n\n    if (result) {\n      dispatch(deleteOrder(id));\n      return;\n    }\n\n    console.log(\"You click No!\");\n  }; //const [orderDelete,setOrderDelete] = useState(true)\n\n\n  const idleTimerRef = useRef(null);\n\n  const onIdle = () => {\n    dispatch(showOrder(order));\n  };\n\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, \"User Profile\"), message && /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, message), success && /*#__PURE__*/React.createElement(Message, {\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, \"Profile Updated\"), loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }) : error ? /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, error) : /*#__PURE__*/React.createElement(Form, {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"name\",\n    placeholder: \"Enter name\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"Enter email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"currentPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, \"Current Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Enter current password\",\n    value: currentPassword,\n    onChange: e => setCurrentPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Enter password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"confirmPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Confirm password\",\n    value: confirmPassword,\n    onChange: e => setConfirmPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, \"Update\"))), /*#__PURE__*/React.createElement(Col, {\n    md: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }, userInfo && !userInfo.isAdmin && /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, \"My Orders\"), loadingDelete && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 29\n    }\n  }), errorDelete && /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 23\n    }\n  }, errorDelete), loadingOrders ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }) : errorOrders ? /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, errorOrders) : /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    variant: \"dark\",\n    responsive: true,\n    className: \"table-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, userInfo && !userInfo.isAdmin && /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, \"ORDER NO\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, \"DATE\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, \"TOTAL\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, \"PAID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }, \"DELIVERED\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, orders.map((order, i) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: order._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 19\n    }\n  }, i + 1), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 19\n    }\n  }, order.createdAt.substring(0, 10)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 19\n    }\n  }, order.totalPrice), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 19\n    }\n  }, order.isPaid ? order.paidAt.substring(0, 10) : /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 19\n    }\n  }, order.isDelivered ? order.deliveredAt.substring(0, 10) : /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(LinkContainer, {\n    to: `/order/${order._id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-sm\",\n    variant: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 23\n    }\n  }, \"Details\"))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 19\n    }\n  }, order.show ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"danger\",\n    className: \"btn-sm\",\n    onClick: () => deleteHandler(order._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 19\n    }\n  }, \"Cancel order\") : null, /*#__PURE__*/React.createElement(IdleTimerProvider, {\n    ref: idleTimerRef,\n    timeout: 5 * 1000,\n    onIdle: onIdle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 21\n    }\n  }))))))));\n};\n\nexport default ProfileScreen;","map":{"version":3,"sources":["C:/Users/Thakshan/Desktop/BookCorner/frontend/src/screens/ProfileScreen.js"],"names":["React","useState","useEffect","useRef","Table","Form","Button","Row","Col","LinkContainer","useDispatch","useSelector","Message","Loader","getUserDetails","updateUserProfile","deleteOrder","listMyOrders","showOrder","USER_UPDATE_PROFILE_RESET","ORDER_SHOW_RESET","confirm","IdleTimerProvider","ProfileScreen","location","history","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","currentPassword","setCurrentPassword","message","setMessage","num","setNum","dispatch","userDetails","state","loading","error","user","userLogin","userInfo","orderDetails","order","orderShow","loadingShow","success","successShow","userUpdateProfile","orderListMy","loadingOrders","errorOrders","orders","orderDelete","loadingDelete","errorDelete","successDelete","i","push","type","submitHandler","e","preventDefault","id","_id","options","labels","confirmable","cancellable","deleteHandler","result","console","log","idleTimerRef","onIdle","target","value","isAdmin","map","createdAt","substring","totalPrice","isPaid","paidAt","color","isDelivered","deliveredAt","show"],"mappings":"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","sourcesContent":["import React, { useState, useEffect,useRef } from 'react'\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { deleteOrder, listMyOrders,showOrder } from '../actions/orderActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport {  ORDER_SHOW_RESET} from '../constants/orderConstants'\nimport { confirm } from \"react-confirm-box\";\nimport { IdleTimerProvider } from 'react-idle-timer'\n\n\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [currentPassword, setCurrentPassword] = useState('')\n  const [message, setMessage] = useState(null)\n  const [num, setNum] = useState(0)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const orderDetails = useSelector((state) => state.orderDetails)\n  const { order} = orderDetails\n\n  const  orderShow = useSelector((state) => state. orderShow)\n  const { loading: loadingShow, success: successShow } =  orderShow\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n  const { success } = userUpdateProfile\n\n  const orderListMy = useSelector((state) => state.orderListMy)\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n  const  orderDelete = useSelector((state) => state. orderDelete)\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } =  orderDelete\n\n  useEffect(() => {\n    let i=setNum(num+1);\n    if (!userInfo) {\n      history.push('/login')\n    } else {\n      if (!user || !user.name || success) {\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\n        dispatch(getUserDetails('profile'))\n        dispatch(listMyOrders())\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n      }\n    }\n  }, [dispatch, history, userInfo, user, success,successDelete, orderListMy,successShow ])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n\n    \n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(updateUserProfile({ id: user._id, name, email, password, currentPassword}))\n    }\n  }\n\n  const options = {\n    labels: {\n      confirmable: \"Confirm\",\n      cancellable: \"Cancel\"\n    }\n  }\n  const deleteHandler = async(id) => {\n    const result = await confirm(\"Are you sure?\", options);\n    \n    if (result) {\n     \n     dispatch(deleteOrder(id))\n      return;\n    }\n    console.log(\"You click No!\");\n  };\n\n\n  //const [orderDelete,setOrderDelete] = useState(true)\n  \n  const idleTimerRef =  useRef(null)\n  const onIdle = () => {\n   \n   \n    dispatch(showOrder(order))\n  }\n  return (\n    \n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {message && <Message variant='danger'>{message}</Message>}\n        {}\n        {success && <Message variant='success'>Profile Updated</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='currentPassword'>\n              <Form.Label>Current Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Enter current password'\n                value={currentPassword}\n                onChange={(e) =>setCurrentPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='password'>\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Enter password'\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='confirmPassword'>\n              <Form.Label>Confirm Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Confirm password'\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </Col>\n      <Col md={9}>\n      {userInfo && !userInfo.isAdmin && (\n        <h2>My Orders</h2>\n        )}\n          {loadingDelete && <Loader />}\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant='danger'>{errorOrders}</Message>\n        ) : (\n\n        \n          <Table striped bordered hover  variant=\"dark\" responsive  className='table-sm'>\n            \n              {userInfo && !userInfo.isAdmin && (\n            <thead>\n              <tr>\n                <th>ORDER NO</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n              )}\n            \n            <tbody>\n           \n              {orders.map((order,i) => (\n              \n                \n                <tr key={order._id}>\n                 \n                  <td>{i+1}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className='btn-sm' variant='light'>\n                        Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                  \n                  <td>\n                  \n                  {\n                  order.show?\n                  <Button\n                      variant='danger'\n                      className='btn-sm'\n                      onClick={() => deleteHandler(order._id)}\n                     \n                    >\n                      \n                      Cancel order\n                    </Button>:null}\n                   \n                    <IdleTimerProvider ref={idleTimerRef} timeout={5 * 1000} onIdle={onIdle}></IdleTimerProvider>\n\n                   \n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n    \n      </Col>\n    </Row>\n  )\n}\n\nexport default ProfileScreen\n"]},"metadata":{},"sourceType":"module"}