{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thakshan\\\\Desktop\\\\BookCorner\\\\frontend\\\\src\\\\screens\\\\OrderListScreen.js\";\nimport React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button, Container } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { listOrders, showOrder, getOrderDetails } from '../actions/orderActions';\nimport { confirm } from \"react-confirm-box\";\nimport { ORDER_SHOW_RESET, ORDER_SHOW_SUCCESS } from '../constants/orderConstants';\n\nconst OrderListScreen = ({\n  history\n}) => {\n  const dispatch = useDispatch();\n  const orderDetails = useSelector(state => state.orderDetails);\n  const {\n    order\n  } = orderDetails;\n  const orderList = useSelector(state => state.orderList);\n  const {\n    loading,\n    error,\n    orders\n  } = orderList;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const orderShow = useSelector(state => state.orderShow);\n  const {\n    loading: loadingShow,\n    success: successShow\n  } = orderShow;\n  useEffect(() => {\n    if (successShow) {\n      dispatch({\n        type: ORDER_SHOW_RESET\n      });\n      dispatch({\n        type: ORDER_SHOW_SUCCESS\n      });\n    }\n\n    if (userInfo && userInfo.isSystemAdmin) {\n      dispatch(listOrders());\n    } else if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders());\n    } else {\n      history.push('/login');\n    }\n  }, [dispatch, history, userInfo, successShow]);\n  const options = {\n    labels: {\n      confirmable: \"Confirm\",\n      cancellable: \"Cancel\"\n    }\n  };\n\n  const shipHandler = async id => {\n    const result = await confirm(\"Is order ready for shipping?\", options);\n\n    if (result) {\n      dispatch(showOrder(id));\n      return;\n    }\n\n    console.log(\"You click No!\");\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"tag my-5\",\n    style: {\n      fontSize: '45px',\n      fontFamily: 'Lucida Console',\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"Orders\"), loadingShow && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 23\n    }\n  }), loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }) : error ? /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, error) : /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    responsive: true,\n    className: \"table-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    style: {\n      background: \"#663399\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, \"USER\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, \"DATE\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, \"TOTAL\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, \"PAID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, \"SHIPPED\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, \"DELIVERED\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, orders.map(order => /*#__PURE__*/React.createElement(\"tr\", {\n    key: order._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, order._id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, order.user && order.user.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, order.createdAt.substring(0, 10)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, \"LKR.\", order.totalPrice), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, order.isPaid ? order.paidAt.substring(0, 10) : /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, order.show ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    className: \"btn-sm\",\n    onClick: () => shipHandler(order._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 22\n    }\n  }, \"Send\") : /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-check\",\n    style: {\n      color: 'green'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, order.isDelivered ? order.deliveredAt.substring(0, 10) : /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LinkContainer, {\n    to: `/order/${order._id}`,\n    style: {\n      backgroundImage: 'linear-gradient(to right, #191654 , #43C6AC)',\n      color: 'white',\n      fontWeight: '600'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, \"Details\")))))))));\n};\n\nexport default OrderListScreen;","map":{"version":3,"sources":["C:/Users/Thakshan/Desktop/BookCorner/frontend/src/screens/OrderListScreen.js"],"names":["React","useEffect","LinkContainer","Table","Button","Container","useDispatch","useSelector","Message","Loader","listOrders","showOrder","getOrderDetails","confirm","ORDER_SHOW_RESET","ORDER_SHOW_SUCCESS","OrderListScreen","history","dispatch","orderDetails","state","order","orderList","loading","error","orders","userLogin","userInfo","orderShow","loadingShow","success","successShow","type","isSystemAdmin","isAdmin","push","options","labels","confirmable","cancellable","shipHandler","id","result","console","log","fontSize","fontFamily","fontWeight","background","map","_id","user","name","createdAt","substring","totalPrice","isPaid","paidAt","color","show","isDelivered","deliveredAt","backgroundImage"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Container } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listOrders,showOrder, getOrderDetails, } from '../actions/orderActions'\nimport { confirm } from \"react-confirm-box\";\nimport {\n  ORDER_SHOW_RESET,\n  ORDER_SHOW_SUCCESS,\n} from '../constants/orderConstants'\nconst OrderListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const orderDetails = useSelector((state) => state.orderDetails)\n  const { order } = orderDetails\n\n  const orderList = useSelector((state) => state.orderList)\n  const { loading, error, orders } = orderList\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const  orderShow = useSelector((state) => state. orderShow)\n  const { loading: loadingShow, success: successShow } =  orderShow\n\n  useEffect(() => {\n    if(successShow ){\n      dispatch({ type: ORDER_SHOW_RESET })\n      dispatch({ type: ORDER_SHOW_SUCCESS })\n      \n    }\n    if (userInfo &&  userInfo.isSystemAdmin) {\n      dispatch(listOrders())\n    }\n    else if (userInfo &&  userInfo.isAdmin) {\n      dispatch(listOrders())\n    }\n    else {\n      history.push('/login')\n    }\n  }, [dispatch, history, userInfo,successShow])\n\n  const options = {\n    labels: {\n      confirmable: \"Confirm\",\n      cancellable: \"Cancel\"\n    }\n  }\n  const shipHandler = async(id) => {\n    const result = await confirm(\"Is order ready for shipping?\", options);\n    \n    if (result) {\n     \n      dispatch(showOrder(id))\n      return;\n    }\n    console.log(\"You click No!\");\n  };\n\n\n  return (\n    <Container>\n    <>\n      <h1 className='tag my-5' style={{fontSize:'45px',fontFamily:'Lucida Console',fontWeight:'bold'}}>Orders</h1>\n      {loadingShow && <Loader />}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr style={{background:\"#663399\"}}>\n              <th>ID</th>\n              <th>USER</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>SHIPPED</th>\n              <th>DELIVERED</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>LKR.{order.totalPrice}</td>\n                <td>\n                  {order.isPaid ? (\n                    order.paidAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  {order.show ? (\n                     <Button\n                     variant='success'\n                     className='btn-sm'\n                     onClick={() => shipHandler(order._id)}\n                    \n                   >\n                     \n                    Send\n                   </Button>\n                  ) : (\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\n                  )}\n                </td>\n                <td>\n                  {order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}  style={{ backgroundImage: 'linear-gradient(to right, #191654 , #43C6AC)',color:'white',fontWeight:'600'}}>\n                    <Button className='btn-sm'>\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n    </Container>\n  )\n}\n\nexport default OrderListScreen\n"]},"metadata":{},"sourceType":"module"}